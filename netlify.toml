[build] 
  publish = "dist"
  functions = "src/functions"
  command = "npm run build"

[dev] 
  publish = "dist"
  functions = "src/functions"
  command = "npm run serve"

[functions]
  node_bundler = "esbuild"

# Serverless render function to get da view directly from the content API since 
# these are stories which are changing frequently
[[redirects]]
  from = "/breaking/:storyid"
  to = "/.netlify/functions/breaking-news-page?storyid=:storyid"
  status = 200
  force = true


# An On-Demand Builder function renders views of articles in the archive. 
# These don't change often and were cluttering up the build.
# We can defer their generation until the first time they get requested
[[redirects]]
  from = "/archived/:storyid"
  to = "/.netlify/functions/odb-news-archive?storyid=:storyid"
  status = 200
  force = true



# Regular news content is pulled form an API like a CMS would provide.
# We'll just use trello for convenience. Thanks to a build plugin.

# Config for the Netlify Build Plugin: netlify-plugin-trello-lists
[[plugins]]
  package = "netlify-plugin-trello-lists"

  [plugins.inputs]

    # The URL of a publicly visible Trello board
    trelloBoardUrl = "https://trello.com/b/u3QFpXib/news-demo"

    # Location of the JSON data file to be generated
    dataFilePath = "src/site/_data/trello.json"

    # If the plugin fails, should it do so quietly or cancel the build?
    # "failBuild" | "failPlugin"
    fail = "failBuild"
